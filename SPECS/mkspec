#!/bin/sh

#
# make a spec file for python2.7 package
# this version does not attempt to parse the auto-generated specfile
# but puts it up alongside the template file in an editor so it's a quick job 
# to replace the relevant tokens
#

name=$1
patch=$2

base=/home/builderdev/rpmbuild/
sourcefile=`ls /$base/SOURCES/$name*.{tar.*,zip} | tail -1`
specdir=$base/SPECS
specname=python27-$name.spec
tmpspec=/tmp/tmpspec

rm -f $tmpspec
tmpunpack=/home/builderdev/tmp/$name.tmp
rm -fr $tmpunpack

mkdir $tmpunpack || exit 1
cd $tmpunpack
tar xfz $sourcefile || tar xfj $sourcefile || unzip $sourcefile
cd $name*
if [ ! -z "$patch" ]
then
    patch -p1 < /$base/SOURCES/$patch
fi
python2.7 setup.py bdist_rpm --spec-only
requires=`sed 's/^/python27-/' requirements.txt`
cp dist/*.spec $tmpspec

cd $specdir
if [ ! -z "$patch" ]
then
    sed "s/@PATCH/$patch/" python27-TEMPLATE-with-patch.spec > $specname
else
    cp python27-TEMPLATE.spec $specname
fi
perl -p -i -e "s/\@REQUIRES\@/$requires/" $specname

echo "alt-X specedit"

emacs $tmpunpack &
emacs -l mkspec.emacs $specname $tmpspec

cat <<EOF
====================================
cd $specdir
./build $specname
====================================
EOF


rm -fr $tmpunpack
